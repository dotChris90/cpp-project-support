{
	"name": "cps",
	"publisher": "dotchris90",
	"icon": "resources/icons/ISO_C++_Logo.svg.png",
	"repository": {
		"type": "git",
		"url": "https://github.com/dotChris90/cpp-project-support"
	},
	"displayName": "C++ Project Support",
	"description": "Support for your C++ project",
	"version": "0.1.1",
	"engines": {
		"vscode": "^1.67.0"
	},
	"categories": [
		"Other"
	],
	"activationEvents": [
		"onCommand:cps.newPrj",
		"onCommand:cps.importPkg",
		"onCommand:cps.install",
		"onCommand:cps.build",
		"onCommand:cps.req",
		"onCommand:cps.cppcheckText",
		"onCommand:cps.cppcheckHtml",
		"onCommand:cps.packageTree",
		"onCommand:cps.targetTree",
		"onCommand:cps.deploy",
		"onCommand:cps.create",
		"onCommand:cps.clean",
		"onCommand:cps.metrix",
		"onCommand:cps.doxygen",
		"onCommand:cps.importTemplate",
		"onCommand:cps.inspect",
		"onCommand:cps.installCPSTools",
		"onCommand:cps.generateInterface",
		"onCommand:cps.addIFClick",
		"onCommand:cps.addFullClass",
		"onCommand:cps.genMethBody",
		"onCommand:cps.getPkgTarget",
		"onCommand:cps.getPrjTarget"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": [
			{
				"id": "cps",
				"order": 1,
				"title": "CPS",
				"properties": {
					"conf.cps.srcDir": {
						"type": "string",
						"default": "src",
						"description": "location of source directory (relative to project root)"
					},
					"conf.cps.buildDir": {
						"type": "string",
						"default": "build",
						"description": "location of build directory (relative to project root)"
					},
					"conf.cps.metrixpp_file": {
						"type": "string",
						"default": "metrixpp.config",
						"description": "location of metrixpp.conf file (relative to project root)"
					},
					"conf.cps.doxygen_file": {
						"type": "string",
						"default": "doxygen.conf",
						"description": "location of doxygen.conf file (relative to project root)"
					},
					"conf.cps.deployDir": {
						"type": "string",
						"default": "deploy",
						"description": "location of deployed package directory (relative to project root)"
					}
				}
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "cps-center",
					"title": "CPS - Command Center",
					"icon": "media/Cpp.svg"
				}
			]
		},
		"views": {
			"cps-center": [
				{
					"id": "buildAndPack",
					"name": "Build workflow"
				}
			],
			"explorer": [
				{
					"id": "cps.center",
					"name": "CPS"
				}
			]
		},
		"commands": [
			{
				"command": "cps.newPrj",
				"title": "CPS - 1 - New Project"
			},
			{
				"command": "cps.importPkg",
				"title": "CPS - 2 - Import depending Packages"
			},
			{
				"command": "cps.install",
				"title": "CPS - 3 - Install Packages"
			},
			{
				"command": "cps.build",
				"title": "CPS - 5 - Build project"
			},
			{
				"command": "cps.packageTree",
				"title": "CPS - Generate Package Tree"
			},
			{
				"command": "cps.targetTree",
				"title": "CPS - Generate Target Tree"
			},
			{
				"command": "cps.req",
				"title": "CPS - requires"
			},
			{
				"command": "cps.clean",
				"title": "CPS - 8 - Clean build dir"
			},
			{
				"command": "cps.importTemplate",
				"title": "CPS - Import default template"
			},
			{
				"command": "cps.doxygen",
				"title": "CPS - Create Doxygen Doc"
			},
			{
				"command": "cps.cppcheckText",
				"title": "CPS - Check C++ Files and generate txt report"
			},
			{
				"command": "cps.metrix",
				"title": "CPS - Create Metrix"
			},
			{
				"command": "cps.deploy",
				"title": "CPS - 7 - Deploy Package"
			},
			{
				"command": "cps.create",
				"title": "CPS - 6 - Create Package and Test"
			},
			{
				"command": "cps.center.installdefault",
				"title": "Install default Release"
			},
			{
				"command": "cps.inspect",
				"title": "CPS - inspect project and dependencies"
			},
			{
				"command": "cps.installCPSTools",
				"title": "CPS  - import CPS tools"
			},
			{
				"command": "cps.generateInterface",
				"title": "CPS - generate Interface Class"
			},
			{
				"command": "cps.addIFClick",
				"title": "CPS - generate Interface Class by selected file"
			},
			{
				"command": "cps.addFullClass",
				"title": "CPS - generate full class by selected file"
			},
			{
				"command": "cps.genMethBody",
				"title": "CPS - generate method body"
			},	
			{	
				"command": "cps.getPkgTarget",
				"title": "CPS - get package targets"
			},
			{
				"command": "cps.getPrjTarget",
				"title": "CPS - 4 - get targets of each package in project"
			}
		],
		"menus": {
			"explorer/context" : [
				{
					"submenu": "cps.conan",
					"group": "z_commands",
					"when": "resourceFilename == conanfile.py"
				},
				{
					"submenu": "cps.generator",
					"group": "z_commands",
					"when": "resourceExtname == .hpp || resourceExtname == .h"
				},
				{
					"submenu": "cps.workspace",
					"group": "z_commands",
					"when": "resourceFilename != conanfile.py"
				}
			],
			"editor/context" : [
				{
					"submenu": "cps.editor",
					"group": "z_commands"
				}
			],
			"cps.generator" : [
				{
					"command": "cps.addIFClick",
					"group": "z_commands"
				},
				{
					"command": "cps.addFullClass",
					"group": "z_commands"
				}
			],
			"cps.workspace" : [
				{
					"command": "cps.importTemplate",
					"group": "navigation"
				},
				{
					"command": "cps.getPkgTarget",
					"group": "navigation"
				}
			],
			"cps.editor" : [
				{
					"command": "cps.genMethBody",
					"group": "z_commands"
				},
				{
					"command": "cps.addIFClick",
					"group": "z_commands"
				},
				{
					"command": "cps.addFullClass",
					"group": "z_commands"
				}
			],
			"cps.conan" : [
				{
					"command": "cps.newPrj",
					"group": "navigation"
				},
				{
					"command": "cps.importPkg",
					"group": "navigation"
				},
				{
					"command": "cps.install",
					"group": "navigation"
				},
				{
					"command": "cps.getPrjTarget",
					"group": "navigation"
				},
				{
					"command": "cps.build",
					"group": "navigation"
				},
				{
					"command": "cps.packageTree",
					"group": "z_commands"
				},
				{
					"command": "cps.doxygen",
					"group": "z_commands"
				},
				{
					"command": "cps.metrix",
					"group": "z_commands"
				},
				{
					"command": "cps.clean",
					"group": "navigation"
				},
				{
					"command": "cps.targetTree",
					"group": "z_commands"
				},
				{
					"command": "cps.create",
					"group": "navigation"
				},
				{
					"command": "cps.inspect",
					"group": "z_commands"
				},
				{
					"command": "cps.deploy",
					"group": "navigation"
				}
			]
		},
		"submenus": [
			{
				"id": "cps.conan",
				"label": "CPS"
			},
			{
				"id" : "cps.generator",
				"label": "CPS"
			},
			{
				"id": "cps.editor",
				"label": "CPS"
			},
			{
				"id" : "cps.workspace",
				"label": "CPS"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"postcompile": "cp -R src/C++Code out",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.1",
		"@types/node": "16.x",
		"@types/vscode": "^1.67.0",
		"@typescript-eslint/eslint-plugin": "^5.27.0",
		"@typescript-eslint/parser": "^5.27.0",
		"@vscode/test-electron": "^2.1.3",
		"copyfiles": "^2.4.1",
		"eslint": "^8.16.0",
		"glob": "^8.0.3",
		"mocha": "^10.0.0",
		"rimraf": "^3.0.2",
		"typescript": "^4.7.2"
	},
	"dependencies": {
		"@types/command-exists": "^1.2.0",
		"@types/fs-extra": "^9.0.13",
		"command-exists": "^1.2.9",
		"crypto": "^1.0.1",
		"fs-extra": "^10.1.0"
	},
	"extensionPack": [
		"ms-vscode.cpptools-extension-pack",
		"jock.svg",
		"ritwickdey.LiveServer",
		"auchenberg.vscode-browser-preview",
		"amiralizadeh9480.cpp-helper"
	],
	"__metadata": {
		"id": "b97ea265-161f-4151-8c50-8554df04b8fb",
		"publisherDisplayName": "dotchris90",
		"publisherId": "3c04cc28-2a65-45eb-b9eb-ed598cc7c3b1",
		"isPreReleaseVersion": false
	}
}
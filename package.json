{
  "name": "cps",
  "publisher": "dotchris90",
  "icon": "resources/icons/ISO_C++_Logo.svg.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/dotChris90/cpp-project-support"
  },
  "displayName": "C++ Project Support",
  "description": "Support for your C++ project",
  "version": "0.1.0",
  "engines": {
    "vscode": "^1.67.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:cps.helloWorld",
    "onCommand:cps.newPrj",
    "onCommand:cps.importPkg",
    "onCommand:cps.install",
    "onCommand:cps.build",
    "onCommand:cps.req",
    "onCommand:cps.cppcheckText",
    "onCommand:cps.cppcheckHtml",
    "onCommand:cps.packageTree",
    "onCommand:cps.targetTree",
    "onCommand:cps.deploy",
    "onCommand:cps.create",
    "onCommand:cps.clean",
    "onCommand:cps.metrix",
    "onCommand:cps.doxygen",
    "onCommand:cps.importTemplate",
    "onCommand:cps.inspect"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "configuration" : [
      {
        "id" : "cps",
        "order": 1,
        "title": "CPS",
        "properties": {
          "conf.cps.srcDir" : {
            "type" : "string",
            "default" : "src",
            "description": "location of source directory (relative to project root)"
          },
          "conf.cps.buildDir" : {
            "type" : "string",
            "default" : "build",
            "description": "location of build directory (relative to project root)"
          },
          "conf.cps.metrixpp_file" : {
            "type" : "string",
            "default" : "metrixpp.config",
            "description": "location of metrixpp.conf file (relative to project root)"
          },
          "conf.cps.doxygen_file" : {
            "type" : "string",
            "default" : "doxygen.conf",
            "description": "location of doxygen.conf file (relative to project root)"
          },
          "conf.cps.pkgDir" : {
            "type" : "string",
            "default" : "pkg",
            "description": "location of deployed package directory (relative to project root)"
          }
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "cps-center",
          "title": "CPS - Command Center",
          "icon": "media/Cpp.svg"
        }
      ]
    },
    "views": {
      "cps-center": [
        {
          "id": "buildAndPack",
          "name": "Build workflow"
        }
      ],
      "explorer": [
          {
            "id": "cps.center",
            "name": "CPS"
          }
      ]
    },
    "commands": [
      {
        "command": "cps.helloWorld",
        "title": "Hello World"
      },
      {
        "command": "cps.newPrj",
        "title": "CPS - New Project"
      },
      {
        "command": "cps.importPkg",
        "title": "CPS - Import depending Packages"
      },
      {
        "command": "cps.install",
        "title": "CPS - Install Packages"
      },
      {
        "command": "cps.build",
        "title": "CPS - Build project"
      },
      {
        "command": "cps.installPick",
        "title": "CPS - Install packages with profile"
      },
      {
        "command": "cps.packageTree",
        "title": "CPS - Generate Package Tree"
      },
      {
        "command": "cps.targetTree",
        "title": "CPS - Generate Target Tree"
      },
      {
        "command": "cps.req",
        "title": "CPS - requires"
      },
      {
        "command": "cps.clean",
        "title": "CPS - Clean build dir"
      },
      {
        "command": "cps.importTemplate",
        "title": "CPS - Import default template"
      },
      {
        "command": "cps.doxygen",
        "title" : "CPS - Create Doxygen Doc"
      },
      {
        "command": "cps.cppcheckText",
        "title": "CPS - Check C++ Files and generate txt report"
      },
      {
        "command": "cps.metrix",
        "title": "CPS - Create Metrix"
      },
      {
        "command": "cps.deploy",
        "title": "CPS - Deploy Package"
      },
      {
        "command": "cps.create",
        "title": "CPS - Create Package and Test"
      },
      {
        "command": "cps.center.installdefault",
        "title": "Install default Release"
      },
      {
        "command": "cps.inspect",
        "title": "CPS - inspect project and dependencies"
      }
    ],
    "menus": {
      "view/item/context": [
        {
          "command": "cps.center.installdefault",
          "when": "view == buildAndPack && viewItem == install"
        },
        {
          "command": "cps.importPkg",
          "when": "view == buildAndPack && viewItem == install"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "postcompile": "cp -R src/C++Code out",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.1.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.67.0",
    "@typescript-eslint/eslint-plugin": "^5.27.0",
    "@typescript-eslint/parser": "^5.27.0",
    "@vscode/test-electron": "^2.1.3",
    "copyfiles": "^2.4.1",
    "eslint": "^8.16.0",
    "glob": "^8.0.3",
    "mocha": "^10.0.0",
    "rimraf": "^3.0.2",
    "typescript": "^4.7.2"
  },
  "dependencies": {
    "@types/command-exists": "^1.2.0",
    "@types/fs-extra": "^9.0.13",
    "command-exists": "^1.2.9",
    "fs-extra": "^10.1.0"
  },
  "extensionPack": [
    "ms-vscode.cpptools-extension-pack",
    "jock.svg",
    "ritwickdey.LiveServer",
    "auchenberg.vscode-browser-preview"
  ]
}
